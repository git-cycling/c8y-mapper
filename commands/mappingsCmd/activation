#!/usr/bin/env bash
set -e

help() {
    cat << EOT >&2
Activate/ deactivate mapping

USAGE
    c8y mapper mappings activation [flags]

FLAGS
    --id <string>       Id of the mapping name. Accepts pipeline
    --state <boolean>   true or false

EXAMPLES
    c8y mapper mappings activation --id 1101010 --status false
    # Deactivate mapping with id 1101010

    c8y mapper mappings list | c8y mapper mappings activation --status false
    # Deactivate a list of mappings
EOT
}

ARGS=()
FLAGS=()
while [ $# -gt 0 ]; do
    case "$1" in
        --status)
            STATUS="$2"
            shift
            ;;
		--id)
            ID="$2"
            shift
            ;;
        -h|--help)
            help
            exit 0
            ;;
        --*|-*)
            # Collect flags which will be passed to c8y devices create
            FLAGS+=("$1")
            ;;
    esac
    shift
done

# Validate STATUS
if [ -n "$STATUS" ]; then
    case "$STATUS" in
        true|false)
            ;;
        *)
            echo "Error: --status must be either 'true' or 'false'"
            exit 1
            ;;

    esac
fi

set -- "${ARGS[@]}"

if [ -t 0 ]; then
    c8y inventory get -n --id "${ID}" | c8y inventory update --template "_.SelectMerge(input.value, {'d11r_mapping':{'active': ${STATUS}}})" "${FLAGS[@]}"
else
    # Read input from pipeline (let go-c8y-cli do the heavy lifting)
    c8y inventory get | c8y inventory update --template "_.SelectMerge(input.value, {'d11r_mapping':{'active': ${STATUS}}})" "${FLAGS[@]}"
fi
